#!/usr/bin/env bash
set -euo pipefail

# =========================================================
# Debian 12/13 SSH/Screen/TUI 中文显示修复器
# 作者：你自己托管即可
# 功能：locale、ncurses、SSH 环境、screen/tmux、less、readline、git 等一次修复
# 说明：不修复 VNC/物理屏幕中文显示问题，请改用 SSH
# =========================================================

LOG="/var/log/debian-zhfix.log"
touch "$LOG" 2>/dev/null || true

red()    { printf "\033[31m%s\033[0m\n" "$*" ; }
green()  { printf "\033[32m%s\033[0m\n" "$*" ; }
yellow() { printf "\033[33m%s\033[0m\n" "$*" ; }
blue()   { printf "\033[34m%s\033[0m\n" "$*" ; }

require_root() {
  if [[ ${EUID:-0} -ne 0 ]]; then
    red "请以 root 运行本脚本。"
    exit 1
  fi
}

check_debian_version() {
  if [[ -r /etc/os-release ]]; then
    . /etc/os-release
    case "${ID}-${VERSION_ID:-}" in
      debian-12*|debian-13*)
        ;;
      *)
        yellow "检测到系统为：${PRETTY_NAME:-未知}。脚本仅针对 Debian 12/13 进行测试。继续尝试……"
        ;;
    esac
  else
    yellow "无法检测系统版本，继续尝试……"
  fi
}

info_banner() {
  echo
  yellow "========================================================="
  yellow " 注意：本脚本不修复 VNC/本地屏幕的中文显示问题。"
  yellow " 这类问题与客户端字体/图形栈相关，建议使用 SSH。"
  yellow "========================================================="
  echo
}

backup_file() {
  local f="$1"
  [[ -f "$f" ]] || return 0
  cp -a "$f" "${f}.bak.$(date +%s)" >>"$LOG" 2>&1 || true
}

append_once() {
  # 在文件中按整行去重追加
  local line="$1" file="$2"
  grep -qxF "$line" "$file" 2>/dev/null || echo "$line" >>"$file"
}

sed_uncomment_locale() {
  local loc="$1" # e.g. zh_CN.UTF-8 UTF-8
  local f="/etc/locale.gen"
  backup_file "$f"
  if grep -qE "^[#\s]*${loc//./\\.}" "$f"; then
    sed -ri "s|^[#\s]*(${loc//./\\.})|\1|g" "$f"
  else
    echo "$loc" >>"$f"
  fi
}

ensure_packages() {
  # 尽可能轻量，仅安装必要包
  export DEBIAN_FRONTEND=noninteractive
  apt-get update -y >>"$LOG" 2>&1 || true
  apt-get install -y --no-install-recommends locales ncurses-term >>"$LOG" 2>&1
  # 可选：如果系统已有 screen/tmux，做配置；不存在就不强装
  :
}

generate_locale() {
  local want_lang="$1"   # zh_CN.UTF-8
  sed_uncomment_locale "${want_lang} UTF-8"
  locale-gen >>"$LOG" 2>&1
}

set_default_locale() {
  local want_lang="$1"        # zh_CN.UTF-8
  local set_lcctype="$2"      # 1/0
  local set_lcall="$3"        # 1/0

  local args=("LANG=$want_lang")
  [[ "$set_lcctype" == "1" ]] && args+=("LC_CTYPE=$want_lang")
  [[ "$set_lcall"   == "1" ]] && args+=("LC_ALL=$want_lang")

  backup_file /etc/default/locale
  update-locale "${args[@]}" >>"$LOG" 2>&1

  # 再额外写一份 /etc/environment（其不支持 export 语法）
  # 仅保证关键变量存在，避免重复
  backup_file /etc/environment
  touch /etc/environment
  grep -q '^LANG=' /etc/environment      || echo "LANG=$want_lang" >> /etc/environment
  if [[ "$set_lcctype" == "1" ]]; then
    grep -q '^LC_CTYPE=' /etc/environment || echo "LC_CTYPE=$want_lang" >> /etc/environment
  fi
  if [[ "$set_lcall" == "1" ]]; then
    grep -q '^LC_ALL=' /etc/environment   || echo "LC_ALL=$want_lang" >> /etc/environment
  fi
}

write_profile_env() {
  # 给交互/非登录 shell 也吃到环境；放到 profile.d
  local f="/etc/profile.d/99-zhcn-locale.sh"
  backup_file "$f"
  cat > "$f" <<'EOF'
# Generated by debian-zhfix
# 统一 UTF-8 行为与 TUI 边框兼容
export NCURSES_NO_UTF8_ACS=1
# 如果 TERM 未设置，给个稳妥的 256 色终端类型
[ -z "${TERM:-}" ] && export TERM=xterm-256color
# less 显示 UTF-8
export LESSCHARSET=utf-8
# 彩色输出保留（大多数工具会自动检测）
# 防止某些环境下 man/less 控制符被转义：建议让 less 允许原样控制符
export LESS="-R"
EOF
  chmod 0644 "$f"
}

fix_readline_inputrc() {
  local f="/etc/inputrc"
  backup_file "$f"
  touch "$f"
  append_once "# >>> debian-zhfix (UTF-8 readline) >>>" "$f"
  append_once "set input-meta on" "$f"
  append_once "set output-meta on" "$f"
  append_once "set convert-meta off" "$f"
  append_once "# <<< debian-zhfix <<<" "$f"
}

fix_screen() {
  if command -v screen >/dev/null 2>&1; then
    local f="/etc/screenrc"
    backup_file "$f"
    touch "$f"
    append_once "# >>> debian-zhfix (UTF-8 screen) >>>" "$f"
    append_once "defutf8 on" "$f"
    append_once "defencoding utf8" "$f"
    append_once "term screen-256color" "$f"
    append_once "# <<< debian-zhfix <<<" "$f"
  fi
}

fix_tmux() {
  if command -v tmux >/dev/null 2>&1; then
    local f="/etc/tmux.conf"
    backup_file "$f"
    touch "$f"
    append_once "# >>> debian-zhfix (UTF-8 tmux) >>>" "$f"
    append_once 'set -g default-terminal "tmux-256color"' "$f"
    # 新版 tmux 推荐 RGB 真彩
    append_once 'set -as terminal-features "*:RGB"' "$f"
    append_once "# <<< debian-zhfix <<<" "$f"
  fi
}

fix_git() {
  if command -v git >/dev/null 2>&1; then
    # 中文文件名不转义，终端直接显示
    git config --system core.quotepath false || true
  fi
}

tune_sshd() {
  local f="/etc/ssh/sshd_config"
  if [[ -f "$f" ]]; then
    backup_file "$f"
    # 允许客户端传 LANG/LC_* 进来
    if grep -Eq '^\s*#?\s*AcceptEnv\b' "$f"; then
      sed -ri 's|^\s*#?\s*AcceptEnv.*|AcceptEnv LANG LC_*|g' "$f"
    else
      echo "AcceptEnv LANG LC_*" >>"$f"
    fi
    # 允许 per-user ~/.ssh/environment（可选覆盖）
    if grep -Eq '^\s*#?\s*PermitUserEnvironment\b' "$f"; then
      sed -ri 's|^\s*#?\s*PermitUserEnvironment.*|PermitUserEnvironment yes|g' "$f"
    else
      echo "PermitUserEnvironment yes" >>"$f"
    fi
    systemctl reload ssh || systemctl reload sshd || true
  fi
}

summary() {
  echo
  green "修复完成！建议重新登录 SSH 以让环境变量彻底生效。"
  echo
  blue  "验证示例："
  echo "  1) 执行：locale"
  echo "  2) 执行：printf '中文边框测试：┌─┐\\n│中│\\n└─┘\\n'"
  echo "  3) 执行：echo \$TERM（应为 xterm-256color/tmux-256color/screen-256color）"
  echo
  yellow "提示："
  echo "  - VNC/物理控制台中文显示不在本脚本处理范围，请使用 SSH 终端。"
  echo "  - 若仍有个别 TUI 框线字符异常，可尝试退出后重新登录，或在客户端更换终端字体。"
  echo
}

main_menu() {
  echo "请选择模式："
  echo "  1) 一键修复（推荐）：LANG+LC_CTYPE，避免强设 LC_ALL"
  echo "  2) 进阶（激进）：额外全局设置 LC_ALL=zh_CN.UTF-8"
  echo "  3) 退出"
  read -rp "输入数字并回车: " ans </dev/tty || ans=1
  case "${ans:-1}" in
    1)
      ensure_packages
      generate_locale "zh_CN.UTF-8"
      set_default_locale "zh_CN.UTF-8" 1 0
      write_profile_env
      fix_readline_inputrc
      fix_screen
      fix_tmux
      fix_git
      tune_sshd
      summary
      ;;
    2)
      yellow "警告：全局 LC_ALL 可能影响少数脚本行为（如排序/对比）。"
      read -rp "仍要继续吗？(yes/NO): " go </dev/tty || go=no
      if [[ "${go,,}" == "yes" ]]; then
        ensure_packages
        generate_locale "zh_CN.UTF-8"
        set_default_locale "zh_CN.UTF-8" 1 1
        write_profile_env
        fix_readline_inputrc
        fix_screen
        fix_tmux
        fix_git
        tune_sshd
        summary
      else
        echo "已取消。"
        exit 0
      fi
      ;;
    *)
      echo "已退出。"
      exit 0
      ;;
  esac
}

# ----------------- 入口 -----------------
require_root
check_debian_version
info_banner
main_menu
